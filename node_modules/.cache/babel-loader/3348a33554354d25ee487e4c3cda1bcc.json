{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nexport const UseMedia = (query, val, setMediaQuery) => {\n  _s();\n\n  const queryStr = `(${query}: ${val}px)`;\n  useEffect(() => {\n    const mediaWatcher = window.matchMedia(queryStr);\n    mediaWatcher.matches ? setMediaQuery(true) : setMediaQuery(false);\n\n    function updateMediaWatcher(e) {\n      e.matches ? setMediaQuery(true) : setMediaQuery(false);\n    }\n\n    mediaWatcher.addEventListener('change', updateMediaWatcher);\n    return function cleanup() {\n      mediaWatcher.removeEventListener('change', updateMediaWatcher);\n    };\n  });\n};\n\n_s(UseMedia, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UseMedia;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseMedia\");","map":{"version":3,"sources":["/Users/akilasuresh/Hackathon-website-template/src/hooks/useMedia.tsx"],"names":["useEffect","UseMedia","query","val","setMediaQuery","queryStr","mediaWatcher","window","matchMedia","matches","updateMediaWatcher","e","addEventListener","cleanup","removeEventListener"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAgBC,GAAhB,EAA6BC,aAA7B,KAAoD;AAAA;;AAC1E,QAAMC,QAAQ,GAAI,IAAGH,KAAM,KAAIC,GAAI,KAAnC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,YAAY,GAAGC,MAAM,CAACC,UAAP,CAAkBH,QAAlB,CAArB;AACAC,IAAAA,YAAY,CAACG,OAAb,GAAuBL,aAAa,CAAC,IAAD,CAApC,GAA6CA,aAAa,CAAC,KAAD,CAA1D;;AAEA,aAASM,kBAAT,CAA4BC,CAA5B,EAAoC;AAClCA,MAAAA,CAAC,CAACF,OAAF,GAAYL,aAAa,CAAC,IAAD,CAAzB,GAAkCA,aAAa,CAAC,KAAD,CAA/C;AACD;;AACDE,IAAAA,YAAY,CAACM,gBAAb,CAA8B,QAA9B,EAAwCF,kBAAxC;AAEA,WAAO,SAASG,OAAT,GAAmB;AACxBP,MAAAA,YAAY,CAACQ,mBAAb,CAAiC,QAAjC,EAA2CJ,kBAA3C;AACD,KAFD;AAGD,GAZQ,CAAT;AAaD,CAhBM;;GAAMT,Q;;KAAAA,Q","sourcesContent":["import {useEffect} from 'react';\n\nexport const UseMedia = (query: string, val: number, setMediaQuery: any) => {\n  const queryStr = `(${query}: ${val}px)`;\n\n  useEffect(() => {\n    const mediaWatcher = window.matchMedia(queryStr);\n    mediaWatcher.matches ? setMediaQuery(true) : setMediaQuery(false);\n\n    function updateMediaWatcher(e: any) {\n      e.matches ? setMediaQuery(true) : setMediaQuery(false);\n    }\n    mediaWatcher.addEventListener('change', updateMediaWatcher);\n\n    return function cleanup() {\n      mediaWatcher.removeEventListener('change', updateMediaWatcher);\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}